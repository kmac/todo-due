#!/usr/bin/env python2
from __future__ import print_function

"""
Usage:
%s <args>


"""

import datetime
import os
import os.path
import re
import sys


DEBUG=False


def debug(s):
    if DEBUG:
        print(s, file=sys.stderr)


def check_due(line, today_date):
    match = re.search('due:([\S]+)', line)
    if not match:
        return 'unknown'
    date_str = match.group(1)
    try:
        date_val = datetime.datetime.strptime(date_str, '%Y-%m-%d').date()
    except ValueError:
        return 'unknown'
    if date_val < today_date:
        return 'overdue'
    elif date_val == today_date:
        return 'due'
    return 'not-due'
     

def scan_file(todo_file):
    today_date = datetime.date.today()
    overdue_lines = []
    due_lines = []
    unknown_lines = []
    with open(todo_file) as f:
        for line in f:
            line = line.strip()
            if not line.startswith('x ') and 'due:' in line:
                debug('line: ' + line)
                due_val = check_due(line, today_date)
                if due_val == 'overdue':
                    overdue_lines.append(line)
                elif due_val == 'due':
                    due_lines.append(line)
                elif due_val == 'unknown':
                    unknown_lines.append(line)
    return (overdue_lines, due_lines, unknown_lines)

def print_summary(scan_result):
    """Print a summary of the scan results.
    The summary is markdown format.
    """
    (overdue_lines, due_lines, unknown_lines) = scan_result
    if len(overdue_lines) < 1 and len(due_lines) < 1 and len(unknown_lines) < 1:
        debug('print_summary: nothing to report')
        return
    print('# Todo.txt Summary #\n')
    if len(overdue_lines) > 0:
        print('Overdue\n-------\n')
        for l in overdue_lines:
            print('    %s' % l)
        print('')
    if len(due_lines) > 0:
        print('Due Today\n---------\n')
        for l in due_lines:
            print('    %s' % l)
        print('')
    if len(unknown_lines) > 0:
        print('Unknown\n-------\n')
        for l in unknown_lines:
            print('    %s' % l)
        print('')


def main(argv=None):
    # TODO process 'help' argument

    todo_file = os.environ['TODO_FILE']
    print_summary(scan_file(todo_file))
    return 0


###############################################################################
#
if __name__ == "__main__" or __name__ == "main":
    sys.exit(main())

# vim: set filetype=python :
